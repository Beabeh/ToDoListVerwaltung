openapi: 3.0.1
info:
  title: Todo-Listen-Verwaltung
  description: "API zur Verwaltung von Todo-Listen"
  contact:
    email: bahareh.janott@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
servers:
- url: http://127.0.0.1:5000/
tags:
- name: Listenverwaltung
paths:
  /todo-lists:
    get:
      tags:
      - Listenverwaltung
      summary: Get all todo lists
      operationId: getAllLists
      responses:
        200:
          description: List of all todo lists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoList'
        $ref: '#/components/responses/405'
        $ref: '#/components/responses/500'
  /todo-list:
    post:
      tags:
      - Listenverwaltung
      summary: Add new todo list
      operationId: addTodoList
      requestBody:
        description: Create a new todo list
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
        required: true
      responses:
        200:
          description: Todo list created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        400:
          description: Invalid request
        $ref: '#/components/responses/405'
        $ref: '#/components/responses/500'
  /todo-list/{list_id}:
    get:
      tags:
      - Listenverwaltung
      summary: Get a todo list by ID
      operationId: getTodoList
      parameters:
      - name: list_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Todo list details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        404:
          description: List not found
        $ref: '#/components/responses/405'
        $ref: '#/components/responses/500'
    delete:
      tags:
      - Listenverwaltung
      summary: Delete a todo list
      operationId: deleteTodoList
      parameters:
      - name: list_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: List deleted
        404:
          description: List not found
        $ref: '#/components/responses/405'
        $ref: '#/components/responses/500'
  /todo-list/{list_id}/entries:
    get:
      tags:
      - Listenverwaltung
      summary: Get all entries from a todo list
      operationId: getListEntries
      parameters:
      - name: list_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of all entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoEntry'
        404:
          description: List not found
  /todo-list/{list_id}/entry:
    post:
      tags:
      - Listenverwaltung
      summary: Add an entry to a todo list
      operationId: addEntryToList
      parameters:
      - name: list_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Entry details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        required: true
      responses:
        200:
          description: Entry added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoEntry'
        400:
          description: Invalid request
        404:
          description: List not found
        $ref: '#/components/responses/405'
        $ref: '#/components/responses/500'
  /todo-list/{list_id}/entry/{entry_id}:
    put:
      tags:
      - Listenverwaltung
      summary: Update a todo list entry
      operationId: updateEntry
      parameters:
      - name: list_id
        in: path
        required: true
        schema:
          type: string
      - name: entry_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Updated entry details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        required: true
      responses:
        200:
          description: Entry updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoEntry'
        400:
          description: Invalid request
        404:
          description: Entry or list not found
        $ref: '#/components/responses/405'
        $ref: '#/components/responses/500'
    delete:
      tags:
      - Listenverwaltung
      summary: Delete a todo list entry
      operationId: deleteEntry
      parameters:
      - name: list_id
        in: path
        required: true
        schema:
          type: string
      - name: entry_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Entry deleted
        404:
          description: Entry or list not found
        $ref: '#/components/responses/405'
        $ref: '#/components/responses/500'
components:
  responses:
    405:
      description: "Wrong http method"
    500:
      description: "Internal server Error"
  schemas:
    TodoList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    TodoEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        list_id:
          type: string
          format: uuid
